rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Match the user's specific document path
    // The {userId} wildcard captures the user ID from the path
    match /users/{userId} {
      // Allow reading user document data only if the requesting user is that user
      // (You might not need this if you don't store public user profiles here)
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow creating the user document maybe? Or handle this server-side?
      // allow create: if request.auth != null && request.auth.uid == userId;

      // --- Journal Entries Subcollection ---
      // Match any document within the journalEntries subcollection of a specific user
      match /journalEntries/{entryId} {

        // Allow read, write (create, update, delete) operations
        // ONLY IF the requesting user is authenticated (request.auth != null)
        // AND their authenticated UID matches the {userId} from the path.
        allow read, write: if request.auth != null && request.auth.uid == userId;

        /* --- More Granular Write Rules (Optional but Recommended) ---
           Instead of a single 'write', you can be more specific:

           // Allow CREATE if the user is logged in and the new document's userId matches theirs
           // (Assumes you store a 'userId' field within the journal entry document itself)
           // allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

           // Allow UPDATE if the user is logged in AND they own the document
           // AND maybe prevent them from changing the owner userId field
           // allow update: if request.auth != null && request.auth.uid == resource.data.userId
           //             && request.resource.data.userId == resource.data.userId;

           // Allow DELETE if the user is logged in AND they own the document
           // allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
        */
      }
    }

    // Add rules for any other collections you might have here...

    // Deny all other reads/writes by default if not explicitly allowed above
    // (Implicitly denied if no rule allows)
  }
}